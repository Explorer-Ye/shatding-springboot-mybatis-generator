<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anthony.shatdingspringbootmybatisgenerator.mapper.CallDetailsMapper">
  <resultMap id="BaseResultMap" type="com.anthony.shatdingspringbootmybatisgenerator.entity.CallDetails">
    <result column="session_key" jdbcType="VARCHAR" property="sessionKey" />
    <result column="begin_time" jdbcType="BIGINT" property="beginTime" />
    <result column="side" jdbcType="TINYINT" property="side" />
    <result column="side_index" jdbcType="SMALLINT" property="sideIndex" />
    <result column="session_act" jdbcType="TINYINT" property="sessionAct" />
    <result column="reslut_text" jdbcType="VARCHAR" property="reslutText" />
    <result column="elapsed_time" jdbcType="INTEGER" property="elapsedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    session_key, begin_time, side, side_index, session_act, reslut_text, elapsed_time
  </sql>
  <select id="selectByExample" parameterType="com.anthony.shatdingspringbootmybatisgenerator.entity.CallDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from call_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.anthony.shatdingspringbootmybatisgenerator.entity.CallDetailsExample">
    delete from call_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.anthony.shatdingspringbootmybatisgenerator.entity.CallDetails">
    insert into call_details (session_key, begin_time, side, 
      side_index, session_act, reslut_text, 
      elapsed_time)
    values (#{sessionKey,jdbcType=VARCHAR}, #{beginTime,jdbcType=BIGINT}, #{side,jdbcType=TINYINT}, 
      #{sideIndex,jdbcType=SMALLINT}, #{sessionAct,jdbcType=TINYINT}, #{reslutText,jdbcType=VARCHAR}, 
      #{elapsedTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.anthony.shatdingspringbootmybatisgenerator.entity.CallDetails">
    insert into call_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sessionKey != null">
        session_key,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="side != null">
        side,
      </if>
      <if test="sideIndex != null">
        side_index,
      </if>
      <if test="sessionAct != null">
        session_act,
      </if>
      <if test="reslutText != null">
        reslut_text,
      </if>
      <if test="elapsedTime != null">
        elapsed_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sessionKey != null">
        #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=BIGINT},
      </if>
      <if test="side != null">
        #{side,jdbcType=TINYINT},
      </if>
      <if test="sideIndex != null">
        #{sideIndex,jdbcType=SMALLINT},
      </if>
      <if test="sessionAct != null">
        #{sessionAct,jdbcType=TINYINT},
      </if>
      <if test="reslutText != null">
        #{reslutText,jdbcType=VARCHAR},
      </if>
      <if test="elapsedTime != null">
        #{elapsedTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.anthony.shatdingspringbootmybatisgenerator.entity.CallDetailsExample" resultType="java.lang.Long">
    select count(*) from call_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update call_details
    <set>
      <if test="record.sessionKey != null">
        session_key = #{record.sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="record.beginTime != null">
        begin_time = #{record.beginTime,jdbcType=BIGINT},
      </if>
      <if test="record.side != null">
        side = #{record.side,jdbcType=TINYINT},
      </if>
      <if test="record.sideIndex != null">
        side_index = #{record.sideIndex,jdbcType=SMALLINT},
      </if>
      <if test="record.sessionAct != null">
        session_act = #{record.sessionAct,jdbcType=TINYINT},
      </if>
      <if test="record.reslutText != null">
        reslut_text = #{record.reslutText,jdbcType=VARCHAR},
      </if>
      <if test="record.elapsedTime != null">
        elapsed_time = #{record.elapsedTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update call_details
    set session_key = #{record.sessionKey,jdbcType=VARCHAR},
      begin_time = #{record.beginTime,jdbcType=BIGINT},
      side = #{record.side,jdbcType=TINYINT},
      side_index = #{record.sideIndex,jdbcType=SMALLINT},
      session_act = #{record.sessionAct,jdbcType=TINYINT},
      reslut_text = #{record.reslutText,jdbcType=VARCHAR},
      elapsed_time = #{record.elapsedTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <select id="getCallInfo" parameterType="string" resultType="map">
    select cs.session_key "jobId",sad.side "sender",cs.session_begin_time "beginTime",cs.record_url,
        sad.begin_time "addTime",sad.reslut_text "context",sad.side_index
        from record_call_details cs left join call_details sad on sad.session_key = cs.session_key
        where cs.session_key = #{sessionKey} order by addTime,side_index
  </select>
</mapper>